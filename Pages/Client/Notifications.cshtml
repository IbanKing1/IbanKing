@page
@model IBanKing.Pages.Client.NotificationsModel
@{
    ViewData["Title"] = "Notifications";
    Layout = "_LayoutClient";
}

<div class="container mt-4">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h2 class="mb-0">Notifications</h2>
            <div>
                <form method="post" asp-page-handler="MarkAllAsRead" class="d-inline">
                    <button type="submit" class="btn btn-outline-primary me-2">
                        <i class="fas fa-check-circle"></i> Mark all as read
                    </button>
                </form>
                <form method="post" asp-page-handler="DeleteAll" class="d-inline">
                    <button type="submit" class="btn btn-outline-danger" onclick="return confirm('Are you sure you want to delete all notifications?');">
                        <i class="fas fa-trash-alt"></i> Clear all
                    </button>
                </form>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.Notifications.Any())
            {
                <div class="list-group list-group-flush">
                    @foreach (var notification in Model.Notifications)
                    {
                        <div class="list-group-item notification-item @(!notification.IsRead ? "unread" : "")" onclick="markAsRead(@notification.Id, this)">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="d-flex flex-grow-1" style="min-width: 0;">
                                    <div class="me-3">
                                        <i class="@notification.IconClass text-primary"></i>
                                    </div>
                                    <div class="flex-grow-1" style="min-width: 0;">
                                        <div class="d-flex justify-content-between">
                                            <h6 class="mb-1 notification-title">@notification.Title</h6>
                                            <small class="text-muted notification-time">@notification.TimeAgo</small>
                                        </div>
                                        <p class="mb-1 notification-message">@notification.Message</p>
                                    </div>
                                </div>
                                <div class="ms-3 notification-actions">
                                    <form method="post" asp-page-handler="Delete" asp-route-id="@notification.Id" onclick="event.stopPropagation()">
                                        <button type="submit" class="btn btn-sm btn-link text-danger">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-bell-slash fa-4x text-muted mb-3"></i>
                    <h5 class="text-muted">No notifications</h5>
                    <p class="text-muted">You don't have any notifications yet.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function markAsRead(id, element) {
            fetch(`/Client/Notifications?handler=MarkAsRead&id=${id}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            }).then(() => {
                element.classList.remove('unread');
                element.style.backgroundColor = '';
                element.style.borderLeft = '';
                updateNotificationCount();
            });
        }

        function updateNotificationCount() {
            fetch('/Client/Notifications?handler=UnreadCount')
                .then(response => response.json())
                .then(count => {
                    const badge = document.querySelector('.notification-badge');
                    if (count > 0) {
                        badge.textContent = count;
                        badge.style.display = 'block';
                    } else {
                        badge.style.display = 'none';
                    }
                });
        }
    </script>
}